function [fitresult, gof] = createFitLorentzian(imgfreqs, atoms)
%CREATEFIT(IMGFREQS,ATOMS)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : imgfreqs
%      Y Output: atoms
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 21-Feb-2016 03:40:56


%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( imgfreqs, atoms );

% Set up fittype and options.
ft = fittype( 'a*1/((b*(x-x0))^2+1)', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Algorithm = 'Levenberg-Marquardt';
opts.Display = 'Off';
opts.Robust = 'Bisquare';
[~,index] = max(atoms);
opts.StartPoint = [atoms(index) 0.3 imgfreqs(index)];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, xData, yData );
legend( h, 'atoms vs. imgfreqs', 'untitled fit 1', 'Location', 'NorthEast' );
% Label axes
xlabel ('Freq MHz');
ylabel('sum(OD)');
grid on
title(['Resonance fit with center freq: ', num2str(fitresult.x0)]);


